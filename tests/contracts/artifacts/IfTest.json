{
  "hints": {
    "singleIf()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElse()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElseIf()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElseIfElse()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElseIfElseIf()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "ifElseIfElseIfElse()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "nestedIf(bool,bool)string": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuNDIuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmQtZGV2cmVsL1RFQUxTY3JpcHQKCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbG1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXBzZWN0aXZlIGJyYW5jaCB3aWxsIGJlICJOT1RfSU1QTE1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAppbnQgMAo+CmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCBjcmVhdGVfTm9PcCBOT1RfSU1QTEVNRU5URUQgTk9UX0lNUExFTUVOVEVEIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgTk9UX0lNUExFTUVOVEVEIGNhbGxfTm9PcAoKTk9UX0lNUExFTUVOVEVEOgoJZXJyCgovLyBzaW5nbGVJZigpdm9pZAphYmlfcm91dGVfc2luZ2xlSWY6CgkvLyBleGVjdXRlIHNpbmdsZUlmKCl2b2lkCgljYWxsc3ViIHNpbmdsZUlmCglpbnQgMQoJcmV0dXJuCgpzaW5nbGVJZjoKCXByb3RvIDAgMAoKCS8vIGlmMF9jb25kaXRpb24KCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjcKCS8vIDEKCWludCAxCglieiBpZjBfZW5kCgoJLy8gaWYwX2NvbnNlcXVlbnQKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjgKCS8vIGxvZygnSWYnKQoJYnl0ZSAiSWYiCglsb2cKCmlmMF9lbmQ6CglyZXRzdWIKCi8vIGlmRWxzZSgpdm9pZAphYmlfcm91dGVfaWZFbHNlOgoJLy8gZXhlY3V0ZSBpZkVsc2UoKXZvaWQKCWNhbGxzdWIgaWZFbHNlCglpbnQgMQoJcmV0dXJuCgppZkVsc2U6Cglwcm90byAwIDAKCgkvLyBpZjFfY29uZGl0aW9uCgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czoxMwoJLy8gMQoJaW50IDEKCWJ6IGlmMV9lbHNlCgoJLy8gaWYxX2NvbnNlcXVlbnQKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjE0CgkvLyBsb2coJ0lmJykKCWJ5dGUgIklmIgoJbG9nCgliIGlmMV9lbmQKCmlmMV9lbHNlOgoJLy8gdGVzdHMvY29udHJhY3RzL2lmLmFsZ28udHM6MTYKCS8vIGxvZygnZWxzZScpCglieXRlICJlbHNlIgoJbG9nCgppZjFfZW5kOgoJcmV0c3ViCgovLyBpZkVsc2VJZigpdm9pZAphYmlfcm91dGVfaWZFbHNlSWY6CgkvLyBleGVjdXRlIGlmRWxzZUlmKCl2b2lkCgljYWxsc3ViIGlmRWxzZUlmCglpbnQgMQoJcmV0dXJuCgppZkVsc2VJZjoKCXByb3RvIDAgMAoKCS8vIGlmMl9jb25kaXRpb24KCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjIxCgkvLyAxCglpbnQgMQoJYnogaWYyX2Vsc2VpZjFfY29uZGl0aW9uCgoJLy8gaWYyX2NvbnNlcXVlbnQKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjIyCgkvLyBsb2coJ0lmJykKCWJ5dGUgIklmIgoJbG9nCgliIGlmMl9lbmQKCmlmMl9lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjIzCgkvLyAyCglpbnQgMgoJYnogaWYyX2VuZAoKCS8vIGlmMl9lbHNlaWYxX2NvbnNlcXVlbnQKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjI0CgkvLyBsb2coJ2Vsc2UgaWYnKQoJYnl0ZSAiZWxzZSBpZiIKCWxvZwoKaWYyX2VuZDoKCXJldHN1YgoKLy8gaWZFbHNlSWZFbHNlKCl2b2lkCmFiaV9yb3V0ZV9pZkVsc2VJZkVsc2U6CgkvLyBleGVjdXRlIGlmRWxzZUlmRWxzZSgpdm9pZAoJY2FsbHN1YiBpZkVsc2VJZkVsc2UKCWludCAxCglyZXR1cm4KCmlmRWxzZUlmRWxzZToKCXByb3RvIDAgMAoKCS8vIGlmM19jb25kaXRpb24KCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjI5CgkvLyAxCglpbnQgMQoJYnogaWYzX2Vsc2VpZjFfY29uZGl0aW9uCgoJLy8gaWYzX2NvbnNlcXVlbnQKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjMwCgkvLyBsb2coJ0lmJykKCWJ5dGUgIklmIgoJbG9nCgliIGlmM19lbmQKCmlmM19lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjMxCgkvLyAyCglpbnQgMgoJYnogaWYzX2Vsc2UKCgkvLyBpZjNfZWxzZWlmMV9jb25zZXF1ZW50CgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czozMgoJLy8gbG9nKCdlbHNlIGlmJykKCWJ5dGUgImVsc2UgaWYiCglsb2cKCWIgaWYzX2VuZAoKaWYzX2Vsc2U6CgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czozNAoJLy8gbG9nKCdlbHNlJykKCWJ5dGUgImVsc2UiCglsb2cKCmlmM19lbmQ6CglyZXRzdWIKCi8vIGlmRWxzZUlmRWxzZUlmKCl2b2lkCmFiaV9yb3V0ZV9pZkVsc2VJZkVsc2VJZjoKCS8vIGV4ZWN1dGUgaWZFbHNlSWZFbHNlSWYoKXZvaWQKCWNhbGxzdWIgaWZFbHNlSWZFbHNlSWYKCWludCAxCglyZXR1cm4KCmlmRWxzZUlmRWxzZUlmOgoJcHJvdG8gMCAwCgoJLy8gaWY0X2NvbmRpdGlvbgoJLy8gdGVzdHMvY29udHJhY3RzL2lmLmFsZ28udHM6MzkKCS8vIDEKCWludCAxCglieiBpZjRfZWxzZWlmMV9jb25kaXRpb24KCgkvLyBpZjRfY29uc2VxdWVudAoJLy8gdGVzdHMvY29udHJhY3RzL2lmLmFsZ28udHM6NDAKCS8vIGxvZygnaWYnKQoJYnl0ZSAiaWYiCglsb2cKCWIgaWY0X2VuZAoKaWY0X2Vsc2VpZjFfY29uZGl0aW9uOgoJLy8gdGVzdHMvY29udHJhY3RzL2lmLmFsZ28udHM6NDEKCS8vIDIKCWludCAyCglieiBpZjRfZWxzZWlmMl9jb25kaXRpb24KCgkvLyBpZjRfZWxzZWlmMV9jb25zZXF1ZW50CgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czo0MgoJLy8gbG9nKCdlbHNlIGlmIDEnKQoJYnl0ZSAiZWxzZSBpZiAxIgoJbG9nCgliIGlmNF9lbmQKCmlmNF9lbHNlaWYyX2NvbmRpdGlvbjoKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjQzCgkvLyAzCglpbnQgMwoJYnogaWY0X2VuZAoKCS8vIGlmNF9lbHNlaWYyX2NvbnNlcXVlbnQKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjQ0CgkvLyBsb2coJ2Vsc2UgaWYgMicpCglieXRlICJlbHNlIGlmIDIiCglsb2cKCmlmNF9lbmQ6CglyZXRzdWIKCi8vIGlmRWxzZUlmRWxzZUlmRWxzZSgpdm9pZAphYmlfcm91dGVfaWZFbHNlSWZFbHNlSWZFbHNlOgoJLy8gZXhlY3V0ZSBpZkVsc2VJZkVsc2VJZkVsc2UoKXZvaWQKCWNhbGxzdWIgaWZFbHNlSWZFbHNlSWZFbHNlCglpbnQgMQoJcmV0dXJuCgppZkVsc2VJZkVsc2VJZkVsc2U6Cglwcm90byAwIDAKCgkvLyBpZjVfY29uZGl0aW9uCgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czo0OQoJLy8gMQoJaW50IDEKCWJ6IGlmNV9lbHNlaWYxX2NvbmRpdGlvbgoKCS8vIGlmNV9jb25zZXF1ZW50CgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czo1MAoJLy8gbG9nKCdpZicpCglieXRlICJpZiIKCWxvZwoJYiBpZjVfZW5kCgppZjVfZWxzZWlmMV9jb25kaXRpb246CgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czo1MQoJLy8gMgoJaW50IDIKCWJ6IGlmNV9lbHNlaWYyX2NvbmRpdGlvbgoKCS8vIGlmNV9lbHNlaWYxX2NvbnNlcXVlbnQKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjUyCgkvLyBsb2coJ2Vsc2UgaWYgMScpCglieXRlICJlbHNlIGlmIDEiCglsb2cKCWIgaWY1X2VuZAoKaWY1X2Vsc2VpZjJfY29uZGl0aW9uOgoJLy8gdGVzdHMvY29udHJhY3RzL2lmLmFsZ28udHM6NTMKCS8vIDMKCWludCAzCglieiBpZjVfZWxzZQoKCS8vIGlmNV9lbHNlaWYyX2NvbnNlcXVlbnQKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjU0CgkvLyBsb2coJ2Vsc2UgaWYgMicpCglieXRlICJlbHNlIGlmIDIiCglsb2cKCWIgaWY1X2VuZAoKaWY1X2Vsc2U6CgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czo1NgoJLy8gbG9nKCdlbHNlJykKCWJ5dGUgImVsc2UiCglsb2cKCmlmNV9lbmQ6CglyZXRzdWIKCi8vIG5lc3RlZElmKGJvb2wsYm9vbClzdHJpbmcKYWJpX3JvdXRlX25lc3RlZElmOgoJYnl0ZSAweCAvLyBwdXNoIGVtcHR5IGJ5dGVzIHRvIGZpbGwgdGhlIHN0YWNrIGZyYW1lIGZvciB0aGlzIHN1YnJvdXRpbmUncyBsb2NhbCB2YXJpYWJsZXMKCgkvLyBib29sMjogYm9vbAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJaW50IDAKCWdldGJpdAoKCS8vIGJvb2wxOiBib29sCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglpbnQgMAoJZ2V0Yml0CgoJLy8gZXhlY3V0ZSBuZXN0ZWRJZihib29sLGJvb2wpc3RyaW5nCgljYWxsc3ViIG5lc3RlZElmCglpbnQgMQoJcmV0dXJuCgpuZXN0ZWRJZjoKCXByb3RvIDMgMAoKCS8vIGlmNl9jb25kaXRpb24KCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjYzCgkvLyBib29sMQoJZnJhbWVfZGlnIC0xIC8vIGJvb2wxOiBib29sCglieiBpZjZfZWxzZQoKCS8vIGlmNl9jb25zZXF1ZW50CgkvLyB0ZXN0cy9jb250cmFjdHMvaWYuYWxnby50czo2NAoJLy8gcmV0U3RyID0gJ2lmJwoJYnl0ZSAiaWYiCglmcmFtZV9idXJ5IC0zIC8vIHJldFN0cjogc3RyaW5nCgoJLy8gaWY3X2NvbmRpdGlvbgoJLy8gdGVzdHMvY29udHJhY3RzL2lmLmFsZ28udHM6NjUKCS8vIGJvb2wyCglmcmFtZV9kaWcgLTIgLy8gYm9vbDI6IGJvb2wKCWJ6IGlmN19lbmQKCgkvLyBpZjdfY29uc2VxdWVudAoJLy8gdGVzdHMvY29udHJhY3RzL2lmLmFsZ28udHM6NjYKCS8vIHJldFN0ciA9ICduZXN0ZWQgaWYnCglieXRlICJuZXN0ZWQgaWYiCglmcmFtZV9idXJ5IC0zIC8vIHJldFN0cjogc3RyaW5nCgppZjdfZW5kOgoJYiBpZjZfZW5kCgppZjZfZWxzZToKCS8vIHRlc3RzL2NvbnRyYWN0cy9pZi5hbGdvLnRzOjY5CgkvLyByZXRTdHIgPSAnZWxzZScKCWJ5dGUgImVsc2UiCglmcmFtZV9idXJ5IC0zIC8vIHJldFN0cjogc3RyaW5nCgppZjZfZW5kOgoJLy8gdGVzdHMvY29udHJhY3RzL2lmLmFsZ28udHM6NzIKCS8vIHJldHVybiByZXRTdHI7CglmcmFtZV9kaWcgLTMgLy8gcmV0U3RyOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0CglieXRlIDB4MTUxZjdjNzUKCXN3YXAKCWNvbmNhdAoJbG9nCglyZXRzdWIKCmFiaV9yb3V0ZV9kZWZhdWx0VEVBTFNjcmlwdENyZWF0ZToKCWludCAxCglyZXR1cm4KCmNyZWF0ZV9Ob09wOgoJdHhuIE51bUFwcEFyZ3MKCWJ6IGFiaV9yb3V0ZV9kZWZhdWx0VEVBTFNjcmlwdENyZWF0ZQoJZXJyCgpjYWxsX05vT3A6CgltZXRob2QgInNpbmdsZUlmKCl2b2lkIgoJbWV0aG9kICJpZkVsc2UoKXZvaWQiCgltZXRob2QgImlmRWxzZUlmKCl2b2lkIgoJbWV0aG9kICJpZkVsc2VJZkVsc2UoKXZvaWQiCgltZXRob2QgImlmRWxzZUlmRWxzZUlmKCl2b2lkIgoJbWV0aG9kICJpZkVsc2VJZkVsc2VJZkVsc2UoKXZvaWQiCgltZXRob2QgIm5lc3RlZElmKGJvb2wsYm9vbClzdHJpbmciCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCBhYmlfcm91dGVfc2luZ2xlSWYgYWJpX3JvdXRlX2lmRWxzZSBhYmlfcm91dGVfaWZFbHNlSWYgYWJpX3JvdXRlX2lmRWxzZUlmRWxzZSBhYmlfcm91dGVfaWZFbHNlSWZFbHNlSWYgYWJpX3JvdXRlX2lmRWxzZUlmRWxzZUlmRWxzZSBhYmlfcm91dGVfbmVzdGVkSWYKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50IDE="
  },
  "contract": {
    "name": "IfTest",
    "desc": "",
    "methods": [
      {
        "name": "singleIf",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "ifElse",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "ifElseIf",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "ifElseIfElse",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "ifElseIfElseIf",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "ifElseIfElseIfElse",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "nestedIf",
        "args": [
          {
            "name": "bool1",
            "type": "bool",
            "desc": ""
          },
          {
            "name": "bool2",
            "type": "bool",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "string",
          "desc": ""
        }
      }
    ]
  }
}